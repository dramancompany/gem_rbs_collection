module Gimei
  def self.name: () -> Name

  def self.male: () -> Name

  def self.female: () -> Name

  def self.kanji: () -> String

  def self.hiragana: () -> String

  def self.katakana: () -> String

  def self.romaji: () -> String

  def self.unique: () -> UniqueGenerator

  def self.config: () -> Config

  def self.address: () -> Address

  def self.first: () -> Name::First

  def self.last: () -> Name::Last

  alias self.family self.last

  alias self.given self.first

  class Address
    attr_reader prefecture: Prefecture

    attr_reader city: City

    attr_reader town: Town

    def initialize: () -> void

    def kanji: () -> String

    def hiragana: () -> String

    def katakana: () -> String

    def romaji: () -> String

    class Prefecture
      def kanji: () -> String

      def hiragana: () -> String

      def katakana: () -> String

      def romaji: () -> String

      def initialize: () -> void
    end

    class City
      def kanji: () -> String

      def hiragana: () -> String

      def katakana: () -> String

      def romaji: () -> String

      def initialize: () -> void
    end

    class Town
      def kanji: () -> String

      def hiragana: () -> String

      def katakana: () -> String

      def romaji: () -> String

      def initialize: () -> void
    end
  end

  class Config
    attr_accessor rng: Random

    def initialize: (?rng: untyped rng) -> void
  end

  class Name
    attr_reader first: First

    attr_reader last: Last

    attr_reader gender: Symbol

    def self.male: () -> Name

    def self.female: () -> Name

    def initialize: (?untyped? gender) -> void

    def kanji: () -> String

    def hiragana: () -> String

    def katakana: () -> String

    def romaji: () -> String

    def male?: () -> bool

    def female?: () -> bool

    alias family last

    alias given first

    class First
      def self.male: () -> First

      def self.female: () -> First

      def initialize: (?Symbol gender) -> void

      def male?: () -> bool

      def female?: () -> bool

      def kanji: () -> String

      def hiragana: () -> String

      def katakana: () -> String

      def romaji: () -> String
    end

    class Last
      def initialize: () -> void

      def kanji: () -> String

      def hiragana: () -> String

      def katakana: () -> String

      def romaji: () -> String
    end

    class NameWord
      def initialize: ([String] name) -> void

      def kanji: () -> String

      def hiragana: () -> String

      def katakana: () -> String

      def romaji: () -> String
    end
  end

  class RetryLimitExceeded < StandardError
  end

  class UniqueGenerator
    def self.previous_results: () -> Hash[untyped, untyped]

    def initialize: (untyped klass, Integer max_retries) -> void

    def previous_results: () -> untyped

    def clear: (?Symbol key) -> untyped

    def define_unique_method: (untyped method_name, ?untyped previous_result_key) -> untyped

    def name: () -> Name

    def first: () -> Name::First

    def last: () -> Name::Last

    private

    attr_reader klass: untyped

    attr_reader max_retries: untyped
  end
end
